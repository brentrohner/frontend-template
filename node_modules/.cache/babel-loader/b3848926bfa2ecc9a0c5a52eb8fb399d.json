{"ast":null,"code":"import { applyMiddleware, createStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport logger from './logger';\nimport rootReducer from './reducers';\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer); // istanbul ignore next (disables coverage)\n\nconst enhancers = process.env.NODE_ENV === 'development' // Do not log on prod or test\n? applyMiddleware(thunk, logger) : applyMiddleware(thunk);\nexport const store = createStore(persistedReducer, enhancers); // TODO: Replace ReduxStore<RootState, any> with ReduxStore<RootState, Actions>\n// once https://github.com/rt2zz/redux-persist/pull/1085 is released\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/brentrohner/Projects/SmartWebsiteBlocker/frontend/src/redux/index.ts"],"names":["applyMiddleware","createStore","persistStore","persistReducer","storage","thunk","logger","rootReducer","persistConfig","key","persistedReducer","enhancers","process","env","NODE_ENV","store","persistor"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAAkE,OAAlE;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAuC,YAAvC;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBL,EAAAA;AAFoB,CAAtB;AAKA,MAAMM,gBAAgB,GAAGP,cAAc,CAACK,aAAD,EAAgBD,WAAhB,CAAvC,C,CAEA;;AACA,MAAMI,SAAS,GACbC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,CAAuC;AAAvC,EACId,eAAe,CAACK,KAAD,EAAQC,MAAR,CADnB,GAEIN,eAAe,CAACK,KAAD,CAHrB;AAKA,OAAO,MAAMU,KAAK,GAAGd,WAAW,CAACS,gBAAD,EAAmBC,SAAnB,CAAzB,C,CAEP;AACA;AACA;;AACA,OAAO,MAAMK,SAAS,GAAGd,YAAY,CAACa,KAAD,CAA9B","sourcesContent":["import { applyMiddleware, createStore, Store as ReduxStore } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport logger from './logger';\nimport rootReducer, { RootState } from './reducers';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// istanbul ignore next (disables coverage)\nconst enhancers =\n  process.env.NODE_ENV === 'development' // Do not log on prod or test\n    ? applyMiddleware(thunk, logger)\n    : applyMiddleware(thunk);\n\nexport const store = createStore(persistedReducer, enhancers);\n\n// TODO: Replace ReduxStore<RootState, any> with ReduxStore<RootState, Actions>\n// once https://github.com/rt2zz/redux-persist/pull/1085 is released\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const persistor = persistStore(store as ReduxStore<RootState, any>);\nexport type Store = typeof store;\n"]},"metadata":{},"sourceType":"module"}